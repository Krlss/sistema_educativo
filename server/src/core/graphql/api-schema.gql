# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Period {
  id: ID
  name: String
  createdAt: DateTime
  updatedAt: DateTime
  periodsCourses: [PeriodsCourses!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type PeriodsCourses {
  id: Float
  createdAt: DateTime
  updatedAt: DateTime
  periodId: String
  courseId: String
  period: Period
  course: Course
}

type Course {
  id: ID
  name: String
  createdAt: DateTime
  updatedAt: DateTime
  periodsCourses: [PeriodsCourses!]
}

type Rol {
  id: ID
  name: String
  createdAt: DateTime
  updatedAt: DateTime
  users: [User!]
}

type User {
  id: ID
  email: String
  password: String
  name: String
  lastName: String
  createAt: String
  updateAt: String
  roles: [Rol!]
}

type Topic {
  id: ID
  name: String
  image: String
  video: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  questions: [Question!]
}

type Question {
  id: ID
  title: String
  subtitle: String
  type: QuestionType
  options: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  topic: Topic
}

enum QuestionType {
  order
  place_sign
  listen_text
  simple_multi
  write_coor_cp
  true_or_false
  positional_sum
  listen_numbers
  positional_rest
  positional_mult
  choose_an_option
  operation_simple
  put_points_in_cp
  true_or_false_cp
  positional_table
  choose_any_option
  drag_and_drop_text
  drag_and_drop_sets
  table_multiplication
  selects_points_in_cp
  write_value_from_text
  base10_descomposition
  drag_and_drop_objects
  drag_and_drop_complete
  write_number_positional
  true_or_false_cp_objects
  select_place_table_option
  choose_an_option_textnumber
  true_or_false_numbers_and_text
}

type PeriodsCoursesAsignature {
  id: Float
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  periodCourseId: String
  periodCourse: PeriodsCourses
}

type PeriodsCoursesAsignaturesUnit {
  id: Int!
  periodCourseAsignatureId: Int!
  unitId: String!
  createdAt: DateTime!
  updatedAt: DateTime
  deletedAt: DateTime
  periodCourseAsignature: PeriodsCoursesAsignature!
}

type Asignature {
  id: ID
  name: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  periodsCourses: [PeriodsCourses!]
}

type Unit {
  id: ID
  name: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  periodsCoursesAsignaturesUnits: [PeriodsCoursesAsignaturesUnit!]
}

type CoursePeriodsAsignaturesUnitsTopic {
  id: Int
  name: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  periodCoursesAsignaturesUnitsId: Int
}

type Query {
  courses: [Course!]!
  course(id: String!): Course
  periods: [Period!]!
  period(id: String!): Period
  users: [User!]!
  user(id: String!): User
  roles: [Rol!]!
  rol(id: String!): Rol
  questions: [Question!]
  question(id: String!): Question
  topics: [Topic!]
  topic(id: String!): Topic
  periodsCoursesAsignaturesUnits: [PeriodsCoursesAsignaturesUnit!]!
  periodsCoursesAsignaturesUnit(id: Int!): PeriodsCoursesAsignaturesUnit!
  periodsCoursesAsignaturesUnitsByCoursePeriodAsignature(data: Int!): [PeriodsCoursesAsignaturesUnit!]!
  periodsCoursesAsignaturesUnitsByCoursePeriodAsignature_Unit(periodCourseAsignatureUnitId: Int!, unitId: String!): PeriodsCoursesAsignaturesUnit!
  asignatures: [Asignature!]
  asignature(id: String!): Asignature
  periodsCourses: [PeriodsCourses!]
  periodCourse(id: Float!): PeriodsCourses
  periodCourseByCourseId(id: String!): [PeriodsCourses!]
  periodCourseByPeriodId(id: String!): [PeriodsCourses!]
  periodsCoursesAsignatures: [PeriodsCoursesAsignature!]!
  periodsCoursesAsignature(id: Int!): PeriodsCoursesAsignature
  asignaturesByPeriod_Course(input: FindByPeriodAndCourseDTO!): [PeriodsCoursesAsignature!]!
  units: [Unit!]!
  unit(id: String!): Unit
  getMany: [CoursePeriodsAsignaturesUnitsTopic!]!
  get(id: Int!): CoursePeriodsAsignaturesUnitsTopic!
}

input FindByPeriodAndCourseDTO {
  """Id del periodo"""
  periodId: String!

  """Id del curso"""
  courseId: String!
}

type Mutation {
  createCourse(input: CreateCourseDTO!): Course
  updateCourse(input: UpdateCourseDTO!): Course
  deleteCourse(id: String!): Course
  createPeriod(input: CreatePeriodDTO!): Period
  updatePeriod(input: UpdatePeriodDTO!): Period
  deletePeriod(id: String!): Period
  createUser(input: CreateUserDTO!): User
  updateUser(input: UpdateUserDTO!): User
  deleteUser(id: String!): User
  createRol(input: CreateRolDTO!): Rol!
  updateRol(input: UpdateRolDTO!): Rol!
  deleteRol(id: String!): Rol!
  createQuestion(input: CreateQuestionDTO!): Question!
  updateQuestion(input: UpdateQuestionDTO!): Question!
  deleteQuestion(id: String!): Question!
  createTopic(input: CreateTopicDTO!): Topic!
  updateTopic(input: UpdateTopicDTO!): Topic!
  removeTopic(id: String!): Topic!
  createAsignature(input: CreateAsignatureDTO!): Asignature!
  updateAsignature(input: UpdateAsignatureDTO!): Asignature!
  deleteAsignature(id: String!): Asignature!
  createUnit(input: CreateUnitDTO!): Unit!
  updateUnit(input: UpdateUnitDTO!): Unit!
  deleteUnit(id: String!): Unit!
}

input CreateCourseDTO {
  """Nombre del curso"""
  name: String!

  """Períodos del curso"""
  periods: [String!]
}

input UpdateCourseDTO {
  """Nombre del curso"""
  name: String

  """Períodos del curso"""
  periods: [String!]

  """Id del curso"""
  id: String!
}

input CreatePeriodDTO {
  """Nombre del periodo"""
  name: String!

  """Cursos del periodo"""
  courses: [String!]
}

input UpdatePeriodDTO {
  """Nombre del periodo"""
  name: String

  """Cursos del periodo"""
  courses: [String!]

  """Id del periodo"""
  id: String!
}

input CreateUserDTO {
  """Email del usuario"""
  email: String!

  """Contraseña del usuario"""
  password: String!

  """Nombre del usuario"""
  name: String!

  """Apellido del usuario"""
  lastName: String!

  """Roles del usuario"""
  roles: [String!]
}

input UpdateUserDTO {
  """Email del usuario"""
  email: String

  """Contraseña del usuario"""
  password: String

  """Nombre del usuario"""
  name: String

  """Apellido del usuario"""
  lastName: String

  """Roles del usuario"""
  roles: [String!]

  """Id del rol"""
  id: String!
}

input CreateRolDTO {
  """Nombre del rol"""
  name: String!

  """Usuarios del rol"""
  users: [String!]
}

input UpdateRolDTO {
  """Nombre del rol"""
  name: String

  """Usuarios del rol"""
  users: [String!]

  """Id del rol"""
  id: String!
}

input CreateQuestionDTO {
  """Título de la pregunta"""
  title: String!

  """Subtítulo de la pregunta"""
  subtitle: String = ""

  """Tipo de pregunta"""
  type: QuestionType!

  """Es un objecto, tiene varias formas."""
  options: String!

  """Id del tema al que pertenece la pregunta"""
  topicId: String!
}

input UpdateQuestionDTO {
  """Título de la pregunta"""
  title: String

  """Subtítulo de la pregunta"""
  subtitle: String = ""

  """Tipo de pregunta"""
  type: QuestionType

  """Es un objecto, tiene varias formas."""
  options: String

  """Id del tema al que pertenece la pregunta"""
  topicId: String

  """Id de la pregunta"""
  id: String!
}

input CreateTopicDTO {
  """Nombre del tema"""
  name: String!

  """Esta imagen representa la clase del tema"""
  image: String!

  """Este es el vídeo más explicativo del tema"""
  video: String!

  """Unidad a la que pertenece el tema"""
  periodCourseAsignatureUnitId: [Float!]
}

input UpdateTopicDTO {
  """Nombre del tema"""
  name: String

  """Esta imagen representa la clase del tema"""
  image: String

  """Este es el vídeo más explicativo del tema"""
  video: String

  """Unidad a la que pertenece el tema"""
  periodCourseAsignatureUnitId: [Float!]

  """Id del tema"""
  id: String!
}

input CreateAsignatureDTO {
  """Nombre de la asignatura"""
  name: String!

  """Cursos a los que pertenece la asignatura"""
  periodsCourses: [Int!]
}

input UpdateAsignatureDTO {
  """Nombre de la asignatura"""
  name: String

  """Cursos a los que pertenece la asignatura"""
  periodsCourses: [Int!]
  id: ID
}

input CreateUnitDTO {
  """Nombre de la unidad"""
  name: String!

  """Asignatura a la que pertenece la unidad"""
  periodsCoursesAsignature: [Int!]
}

input UpdateUnitDTO {
  """Nombre de la unidad"""
  name: String

  """Asignatura a la que pertenece la unidad"""
  periodsCoursesAsignature: [Int!]
  id: String!
}